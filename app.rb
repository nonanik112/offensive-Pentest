require 'sinatra'
require 'json'
require 'open3'

# Ana sayfa için rota
get '/' do
  erb :index
end

# Ruby kodunu çalıştırmak için rota
post '/execute_code' do
  code = params[:code]
  output, status = Open3.capture2("ruby -e '#{code}'")
  { output: output, status: status.exitstatus }.to_json
end

# Terminal komutunu çalıştırmak için rota
post '/execute_terminal' do
    command = params[:command]
    output, status = Open3.capture2(command)
    { output: output, status: status.exitstatus }.to_json
end

__END__

@@ index
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cyber Themed Terminal & Documentation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #2b2b2b;
            color: #ffffff;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            height: 100vh;
        }
        .container {
            display: flex;
            flex: 1;
            padding: 10px;
            gap: 10px;
            background-color: #1e1e1e;
        }
        .terminal, .editor {
            flex: 1;
            padding: 10px;
            background-color: #000000;
            color: #00ff00;
            border: 1px solid #3c3c3c;
            border-radius: 5px;
            font-family: 'Courier New', Courier, monospace;
            overflow-y: auto;
        }
        .terminal:focus, .editor:focus {
            outline: none;
            border-color: #00ff00;
        }
        .documentation {
            padding: 20px;
            background-color: #f5f5f5;
            color: #333333;
            border-top: 5px solid #00ff00;
            font-size: 1.2em;
            line-height: 1.6em;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .documentation a {
            color: #00ff00;
            text-decoration: none;
        }
        .documentation a:hover {
            text-decoration: underline;
        }
        .documentation-title {
            font-size: 1.5em;
            margin-bottom: 10px;
            font-weight: bold;
        }
        .documentation-content {
            max-width: 800px;
            margin: 0 auto;
        }
        button {
            background-color: #27ae60;
            border: none;
            color: #ecf0f1;
            padding: 10px;
            cursor: pointer;
            font-family: inherit;
            margin: 10px 0;
        }
        button:hover {
            background-color: #2ecc71;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="terminal" contenteditable="true" tabindex="1">
            Welcome to the web terminal!
        </div>
        <div class="editor" contenteditable="true" tabindex="2">
            # Ruby code here
        </div>
    </div>
    <div class="documentation">
        <div class="documentation-title">Ruby Documentation</div>
        <div class="documentation-content">
            Buraya Ruby ile ilgili belgelere ulaşabilirsiniz...
            <ul>
                <li><a href="https://www.ruby-lang.org/en/documentation/" target="_blank">Ruby Docs</a></li>
                <li><a href="https://ruby-doc.org/core-3.1.0/" target="_blank">Core API</a></li>
                <li><a href="https://guides.rubyonrails.org/" target="_blank">Ruby on Rails Guides</a></li>
            </ul>
            <p>
                Bu dökümanlar Ruby geliştirme sürecinde size yardımcı olacak en önemli kaynaklardır. Profesyonel bir geliştirici olarak bu dökümanları derinlemesine incelemeniz önemlidir.
            </p>
        </div>
    </div>
</body>
<script>
    document.querySelector('.terminal').addEventListener('keydown', function(event) {
        if (event.key === 'Enter') {
            const command = this.textContent.trim();
            fetch('/execute_terminal', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ command: command }),
            })
            .then(response => response.json())
            .then(data => {
                this.textContent += `\n${data.output}`;
            });
            event.preventDefault();
        }
    });

    document.querySelector('.editor').addEventListener('keydown', function(event) {
        if (event.key === 'Enter') {
            const code = this.textContent.trim();
            fetch('/execute_code', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ code: code }),
            })
            .then(response => response.json())
            .then(data => {
                this.textContent += `\n#=> ${data.output}`;
            });
            event.preventDefault();
        }
    });
</script>
</html>
